{"version":3,"sources":["services/settings.js","components/Category/index.js","components/Gif/index.js","components/ListOfGifs/index.js","components/Spinner/index.js","hooks/useNearScreen.js","components/TrendingSearches/index.js","services/getGifs.js","context/GifsContext.js","hooks/useGifs.js","pages/Home/index.js","pages/SearchResults/index.js","pages/Detail/index.js","context/StaticContext.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","API_URL","Category","name","options","className","map","singleOption","to","Gif","title","id","url","loading","alt","src","ListOfGifs","gifs","Spinner","useNearScreen","distance","externalRef","once","useState","isNearScreen","setShow","fromRef","useRef","useEffect","observer","element","current","onChange","entries","isIntersecting","disconnect","Promise","resolve","IntersectionObserver","then","rootMargin","observe","TrendingSearches","React","lazy","LazyTrending","ref","fallback","getGifs","limit","keyword","page","apiURL","fetch","res","json","response","data","image","images","downsized_medium","Context","createContext","GifsContextProvider","children","setGifs","Provider","value","useGifs","setLoading","loadingNextPage","setLoadingNextPage","setPage","useContext","GifsContext","keywordToUse","localStorage","getItem","setItem","nextGifs","prevGifs","concat","Home","setKeyword","useLocation","pushLocation","onSubmit","evt","preventDefault","placeholder","target","type","SearchResults","params","console","log","debounceHandleNextPage","useCallback","debounce","currentPage","decodeURI","Detail","gif","find","singleGif","App","StaticContext","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0445a70f.chunk.js","sourcesContent":["export const API_KEY = \"pHPA5snwQtXPyDs1V37sm71z4CP7PI6R\";\nexport const API_URL = \"https://api.giphy.com/v1\";\n","import { Link } from \"wouter\";\n\nimport \"./Category.css\";\n\nexport default function Category({ name, options = [] }) {\n  return (\n    <div className=\"Category\">\n      <h3 className=\"Category-title\">{name}</h3>\n      <ul className=\"Category-list\">\n        {options.map((singleOption) => {\n          return (\n            <li key={singleOption}>\n              <Link className=\"Category-link\" to={`/search/${singleOption}`}>\n                {singleOption}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { Link } from \"wouter\";\nimport \"./Gif.css\";\n\nexport default function Gif({ title, id, url }) {\n  return (\n    <div className=\"Gif\">\n      <Link to={`/sticker/${id}`} className=\"Gif-link\">\n        <h4>{title}</h4>\n        <img loading=\"lazy\" alt={title} src={url} />\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Gif from \"../Gif\";\nimport \"./styles.css\";\n\nexport default function ListOfGifs({ gifs }) {\n  return (\n    <div className=\"ListOfGifs\">\n      {gifs.map(({ id, title, url }) => (\n        <Gif id={id} key={id} title={title} url={url} />\n      ))}\n    </div>\n  );\n}\n","import \"./styles.css\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nexport default function useNearScreen({\n  distance = \"100px\",\n  externalRef,\n  once = true,\n} = {}) {\n  const [isNearScreen, setShow] = useState(false);\n  const fromRef = useRef();\n\n  useEffect(() => {\n    let observer;\n\n    const element = externalRef ? externalRef.current : fromRef.current;\n    if (!element) return;\n\n    const onChange = (entries, observer) => {\n      const el = entries[0];\n      if (el.isIntersecting) {\n        setShow(true);\n        once && observer.disconnect();\n      } else {\n        !once && setShow(false);\n      }\n    };\n\n    Promise.resolve(\n      typeof IntersectionObserver !== \"undefined\"\n        ? IntersectionObserver\n        : import(\"intersection-observer\")\n    ).then(() => {\n      observer = new IntersectionObserver(onChange, {\n        rootMargin: distance,\n      });\n\n      observer.observe(element);\n    });\n\n    return () => observer && observer.disconnect();\n  }, [distance, externalRef, once]);\n\n  return { isNearScreen, fromRef };\n}\n","import React, { Suspense } from \"react\";\nimport useNearScreen from \"hooks/useNearScreen\";\nimport Spinner from \"components/Spinner\";\n// import TrendingSearches from \"./TrendingSearches\";\nconst TrendingSearches = React.lazy(() =>\n  import(\"components/TrendingSearches/TrendingSearches.js\")\n);\n\nexport default function LazyTrending() {\n  const { isNearScreen, fromRef } = useNearScreen({ distance: \"100px\" });\n\n  return (\n    <div ref={fromRef}>\n      <Suspense fallback={<Spinner />}>\n        {isNearScreen ? <TrendingSearches /> : null}\n      </Suspense>\n    </div>\n  );\n}\n","import { API_KEY, API_URL } from \"./settings\";\n\nexport default function getGifs({\n  limit = 5,\n  keyword = \"taxipictures\",\n  page = 0,\n} = {}) {\n  const apiURL = `${API_URL}/stickers/search?api_key=${API_KEY}&q=${keyword}&limit=${limit}&offset=${\n    page * limit\n  }&rating=g&lang=en`;\n  return fetch(apiURL)\n    .then((res) => res.json())\n    .then((response) => {\n      const { data } = response;\n      const gifs = data.map((image) => {\n        const { images, title, id } = image;\n        const url = images.downsized_medium.url;\n        return { title, id, url };\n      });\n      return gifs;\n    });\n}\n","import React, { useState } from \"react\";\n\nconst Context = React.createContext({});\n\nexport function GifsContextProvider({ children }) {\n  const [gifs, setGifs] = useState([]);\n  return (\n    <Context.Provider value={{ gifs, setGifs }}>{children}</Context.Provider>\n  );\n}\nexport default Context;\n","import { useContext, useState, useEffect } from \"react\";\nimport getGifs from \"services/getGifs\";\nimport GifsContext from \"context/GifsContext\";\n\nconst INITIAL_PAGE = 0;\n\nexport default function useGifs({ keyword } = { keyword: null }) {\n  const [loading, setLoading] = useState(false);\n  const [loadingNextPage, setLoadingNextPage] = useState(false);\n  const [page, setPage] = useState(INITIAL_PAGE);\n  const { gifs, setGifs } = useContext(GifsContext);\n\n  const keywordToUse = keyword || localStorage.getItem(\"lastKeyword\") || \"void\";\n\n  useEffect(\n    function () {\n      setLoading(true);\n\n      getGifs({ keyword: keywordToUse }).then((gifs) => {\n        setGifs(gifs);\n        setLoading(false);\n        localStorage.setItem(\"lastKeyword\", keywordToUse);\n      });\n    },\n    [keyword, keywordToUse, setGifs]\n  );\n\n  useEffect(() => {\n    if (page === INITIAL_PAGE) return;\n    setLoadingNextPage(true);\n    getGifs({ keyword: keywordToUse, page }).then((nextGifs) => {\n      setGifs((prevGifs) => prevGifs.concat(nextGifs));\n      setLoadingNextPage(false);\n    });\n  }, [keywordToUse, page, setGifs]);\n\n  return { loading, gifs, setPage, loadingNextPage };\n}\n","import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport Category from \"components/Category\";\nimport ListOfGifs from \"components/ListOfGifs\";\nimport Spinner from \"components/Spinner\";\nimport TrendingSearches from \"components/TrendingSearches\";\nimport useGifs from \"hooks/useGifs\";\n\nexport default function Home() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [path, pushLocation] = useLocation();\n  const { loading, gifs } = useGifs();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    pushLocation(`/search/${keyword}`);\n  };\n\n  const handleChange = (evt) => {\n    setKeyword(evt.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <button>Search</button>\n        <input\n          placeholder=\"Search a sticker here...\"\n          onChange={handleChange}\n          type=\"text\"\n          value={keyword}\n        />\n      </form>\n      <div className=\"App-main\">\n        <div className=\"App-results\">\n          <h3 className=\"App-title\">Last search</h3>\n          {loading ? <Spinner /> : <ListOfGifs gifs={gifs} />}\n        </div>\n        <div className=\"App-category\">\n          <TrendingSearches />\n          <Category\n            name=\"Others\"\n            options={[\n              \"Spain\",\n              \"Sun\",\n              \"Code\",\n              \"Travel\",\n            ]}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import Spinner from \"components/Spinner\";\nimport ListOfGifs from \"components/ListOfGifs\";\nimport useGifs from \"hooks/useGifs\";\nimport useNearScreen from \"hooks/useNearScreen\";\nimport debounce from \"just-debounce-it\";\nimport { useRef, useEffect, useCallback } from \"react\";\n\nexport default function SearchResults({ params }) {\n  const { keyword } = params;\n  const { loading, gifs, setPage, loadingNextPage } = useGifs({ keyword });\n  const externalRef = useRef();\n  const { isNearScreen } = useNearScreen({\n    externalRef: loading ? null : externalRef,\n    once: false,\n  });\n\n  console.log(isNearScreen);\n\n  const debounceHandleNextPage = useCallback(\n    debounce(() => setPage((currentPage) => ++currentPage), 300),\n    []\n  );\n\n  // const debounceHandleNextPage = debounce(() => {\n  //   setPage((currentPage) => ++currentPage);\n  //   console.log(\"next page\");\n  // }, 500);\n\n  useEffect(() => {\n    if (isNearScreen) debounceHandleNextPage();\n  });\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h3 className=\"App-title\">{decodeURI(keyword)}</h3>\n          <ListOfGifs gifs={gifs} />\n        </>\n      )}\n      {loadingNextPage && <Spinner />}\n      <div id=\"visor\" ref={externalRef} />\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport GifsContext from \"context/GifsContext\";\nimport Gif from \"components/Gif\";\n\nexport default function Detail({ params }) {\n  const { gifs } = useContext(GifsContext);\n  const gif = gifs.find((singleGif) => singleGif.id === params.id);\n\n  return (\n    <>\n    {gif &&  (\n      <>\n      <h3 className=\"App-title\">{gif.title}</h3>\n      <Gif {...gif} />;\n      </>\n      )\n    }\n    </>\n  );\n}\n","import { createContext } from \"react\";\n\nconst Context = createContext({});\n\nexport default Context;\n","import \"App.css\";\nimport Home from \"pages/Home\";\nimport SearchResults from \"pages/SearchResults\";\nimport Detail from \"pages/Detail\";\nimport StaticContext from \"context/StaticContext\";\nimport { Link, Route } from \"wouter\";\nimport { GifsContextProvider } from \"context/GifsContext\";\n\nfunction App() {\n  return (\n    <StaticContext.Provider value={{ name: \"nilquera\" }}>\n      <div className=\"App\">\n        <section className=\"App-content\">\n          <Link to=\"/\">\n            <figure className=\"App-logo\">\n              <img alt=\"Estics logo\" src=\"/logo.png\" />\n            </figure>\n          </Link>\n          <GifsContextProvider>\n            <Route component={Home} path=\"/\" />\n            <Route component={SearchResults} path=\"/search/:keyword\" />\n            <Route component={Detail} path=\"/sticker/:id\" />\n          </GifsContextProvider>\n        </section>\n      </div>\n    </StaticContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"index.css\";\nimport App from \"App\";\nimport reportWebVitals from \"reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}